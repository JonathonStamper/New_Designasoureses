'use client';

import React, { useEffect } from "react";
import L from "leaflet";
import "leaflet/dist/leaflet.css";
import styles from './map.module.css';
import { renderToString } from "react-dom/server";
import { MarkerClusterGroup } from "leaflet.markercluster";

const DEFAULT_CENTER = [52.370216, 4.895168]; 
const NETHERLANDS_POINTS = [
  [52.370216, 4.895168], 
  [51.924420, 4.477125], 
  [52.090737, 5.122662], 
  [51.443363, 5.487674], 
  [52.509539, 6.893445], 
]; 

const Map = () => {
  useEffect(() => {
    let map;
    const container = L.DomUtil.get("map");

    if (container != null) {
      container._leaflet_id = null;
    }

    map = L.map("map", {
      zoomControl: true,
      dragging: true,
    }).setView(DEFAULT_CENTER, 12);

    L.tileLayer("https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", {
      attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
    }).addTo(map);

    var markers = L.markerClusterGroup({
      
      iconCreateFunction: function(cluster) {
        return L.divIcon({
          html: `<div className="${styles.customIcon} w-10 h-10 rounded-full overflow-hidden p-4 bg-white">
            <p className="text-2xl">${cluster.getChildCount()}</p>
          </div>`,
          className: styles.customIcon,
        });
      },
    });

    NETHERLANDS_POINTS.forEach((point, index) => {
      const marker = L.marker(point, {
        icon: L.divIcon({
          html: renderToString(<Marker name={`Point ${index + 1}`} />),
          className: styles.customIcon,
        }),
      });
      markers.addLayer(marker);
    });

    map.addLayer(markers);

    return () => {
      if (map) map.remove();
    };
  }, []);

  return <div id="map" className={`${styles.map} h-[100vh] w-[100vw]`}></div>;
};

export default Map;

const Marker = ({ name = "Title generated by AI" }) => {
  return <div className="w-36 overflow-hidden rounded-2xl bg-white">
    <div className="w-36 h-36 overflow-hidden" style={{ backgroundImage: 'url(./disaster.png)', backgroundSize: "cover" }} />
    <div className="w-full h-fit p-2">
      <p className="text-sm">{name}</p>
      <p className="text-xs">Approx. location</p>
    </div>
  </div>
}