'use client';

import React, { useEffect } from "react";
import L from "leaflet";
import "leaflet/dist/leaflet.css";
import styles from './map.module.css';
import { renderToString } from "react-dom/server";

const DEFAULT_CENTER = [52.370216, 4.895168]; // Center of the Netherlands

const Map = () => {
  const markers = [
    { latitude: 52.3676, longitude: 4.9041, name: 'Amsterdam', address: 'Dam Square, Amsterdam' },
    { latitude: 51.9244, longitude: 4.4777, name: 'Rotterdam', address: 'Erasmus Bridge, Rotterdam' },
    { latitude: 52.0907, longitude: 5.1214, name: 'Utrecht', address: 'Dom Tower, Utrecht' },
    { latitude: 52.0116, longitude: 4.3571, name: 'The Hague', address: 'Binnenhof, The Hague' },
    { latitude: 53.2194, longitude: 6.5665, name: 'Groningen', address: 'Grote Markt, Groningen' },
    { latitude: 51.4416, longitude: 5.4697, name: 'Eindhoven', address: 'Stratumseind, Eindhoven' },
    { latitude: 52.1550, longitude: 5.3878, name: 'Amersfoort', address: 'Koppelpoort, Amersfoort' },
    { latitude: 50.8514, longitude: 5.6900, name: 'Maastricht', address: 'Vrijthof, Maastricht' },
  ];

  useEffect(() => {
    let map;
    const container = L.DomUtil.get("map");

    if (container != null) {
      container._leaflet_id = null;
    }

    map = L.map("map", {
      zoomControl: true,
      dragging: true,
    }).setView(DEFAULT_CENTER, 12);

    // Satellite Layer (ESRI World Imagery)
    L.tileLayer("https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}", {
      attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community',
    }).addTo(map);

    // Add custom markers
    markers.forEach(marker => {
      const customIcon = L.divIcon({
        className: 'custom-icon',
        html: renderToString(<Marker name={marker.name} />),
      });

      L.marker([marker.latitude, marker.longitude], { icon: customIcon })
        .addTo(map)
        .bindPopup(`<b>${marker.name}</b><br>${marker.address}`);
    });

    return () => {
      if (map) map.remove();
    };
  }, []);

  return <div id="map" className={`${styles.map} h-[100vh] w-[100vw]`}></div>;
};

export default Map;

const Marker = ({ name = "Title generated by AI" }) => {
  return <div className="w-36 overflow-hidden rounded-2xl bg-white">
    <div className="w-36 h-36 overflow-hidden" style={{ backgroundImage: 'url(./disaster.png)', backgroundSize: "cover" }} />
    <div className="w-full h-fit p-2">
      <p className="text-sm">{name}</p>
      <p className="text-xs">Approx. location</p>
    </div>
  </div>
}
